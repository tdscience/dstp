---
title: "Data Science for Transport Planning: Day 2"
author: "Professor Robin Lovelace"
date: "September 19, 2025"
format: clean-revealjs
bibliography: ../references.bib
---

## Welcome to Day 2!

Data Science for Transport Planning

**2-day course**

18-19 September 2025

## Agenda

-   **09:00-10:45** Spatio-temporal data
-   10:45-11:15 Break and refreshments
-   11:15-12:30 Routing and route network analysis
-   12:30-13:30 Lunch
-   13:30-15:00 Best practices for data science in transport planning
-   15:00-16:00 Advanced topics

## Recap of Day 1

-   Introduction to Data Science for Transport Planning
-   Finding, importing and cleaning transport datasets
-   Origin-destination data analysis
-   OD Transport data visualisation

## Let's move to the practical sessions

See the [schedule](../schedule.qmd) for details.

Any questions before we start?

## Practical session 4: Spatio-temporal data

![](images/paste-19.png)


## Practical 4 options

1. Get stuck-into open access CDR (call detail records) data from Spain using the `spanishoddata` package
2. Revisit the London Cycle Hire data from session 3.
3. Explore changes in the spatial and temporal distrutions of road traffic collisions with stats19 package
4. Bring your own data (BYOD)! 

## spanishoddata

Download a load of data from Spain!

![](https://github.com/rOpenSpain/spanishoddata/raw/main/man/figures/logo.png)

## Practical session 5: Routing and route network analysis

![](images/paste-20.png)

## Routing infrastructure

![](images/routing-code-live.png)

## Routing costs

![](images/routing-costs.png)

## Routing Server Cost Summary

**VM Configuration:** - e2-medium instance (2 vCPUs, 4 GB RAM) - Spot pricing (60-90% discount) - Europe-west2 region

**Estimated Daily Cost:** - On-demand: \~\$0.034/hour - Spot discount: \~70% = \~\$0.010/hour - **Per day (24h):** \~\$0.24

**Monthly Estimate:** \~\$7-8

**Additional Costs:** - Disk storage: \~\$0.04/month - Network egress: Free for 1 GB/day, then \~\$0.12/GB - Spot interruptions possible but cost-effective for non-critical workloads

*Prices approximate; use GCP Pricing Calculator for current rates.*

## Practical session 6: Version control (Git+GitHub)

We do not need that for sure!

## Version Control

Yes, we do...

![Version control. From: [programmerhumor.io](https://programmerhumor.io/)](images/version_control_humour.jpg)

## How does it look?

![From [20i.com](https://docs.20i.com/reseller-hosting/git-version-control-my20i)](images/paste-18.png)

## Key terms

-   Fork: Making a personal copu of a repository
-   Clone: Downloading a full copy of a repository to your computer
-   Pull : Fetches changes from the cloud to your local copy
-   Commit: Saves a snapshot of your changes
-   Push: Uploads your local ***commits***
-   Branch: A separate line of development in a repository.
-   Pull request: Proposes your changes from a branch to be merged into the main project.

## What we will be doing

1.  Forking a repository
2.  Cloning a repository (for those working locally)
3.  Creating an issue
3.  Creating a branch
4.  Making changes
5.  Committing changes
6.  Pushing changes
7.  Creating a PR

## Feedback on the course

Please provide feedback on this [forms.office.com/e/m102aC23ZD](https://forms.office.com/e/m102aC23ZD) (should take less than 5 minutes):

![](images/paste-16.png)

## Advanced topics

## Visualising large datasets

- Install and try visualising datasets from previous sessions with:
  - [`mapgl`](https://github.com/walkerke/mapgl/): an R interface to Mapbox GL JS for rendering large spatial datasets.
  - [`tmap.gl`](https://github.com/r-tmap/tmap.mapgl/): Use your existing `tmap` code, that builds on `mapgl`
  - The [`nptscot/pmtiles`](https://github.com/nptscot/pmtiles) GitHub package provides tools for creating vector tiles in R (advanced).

## Route network integration

- Take a read of the [networkmerge paper](https://nptscot/networkmerge) and try to reproduce some of the code
- Search for and download the Ordnance Survey's OpenRoads data product
- Check-out the [`stplanr`](https://docs.ropensci.org/stplanr/) function [`rnet_join()`](https://docs.ropensci.org/stplanr/reference/rnet_join.html) for joining different route networks, e.g. walking and cycling networks.
- Check-out the [`anime`](https://github.com/josiahparker/anime) package for astonishingly fast network joining (advanced).

## Deploying your work as web applications

- Think about the project that you're working on that would have the maximum benefit from being deployed as a web application.
- Sketch out the user interface and user experience (UI/UX) of the application.
- Sketch the data flow and architecture of backend systems.
- Read-up on the [`targets`](https://books.ropensci.org/targets/) package for reproducible pipelines.
- Take a look at the source code of some deployed web applications for inspiration

### Example: Propensity to Cycle Tool (PCT)

The PCT is an open-source planning tool for cycling scenarios in England and Wales.

*(Interactive map screenshot: Cycling potential layers over England and Wales, showing commute scenarios with color-coded routes)*

- Interactive maps with Leaflet for route visualization
- Scenarios: Government Target, Go Dutch, Ebike
- Source: [pct.bike](https://www.pct.bike), GitHub [npct/pct](https://github.com/npct/pct)

Best practice: Use Shiny for interactivity, open-source for collaboration, integrate with census data for evidence-based planning.

### Example: Propensity to Cycle Tool for Northern Ireland (PCTNI)

Similar to PCT, adapted for Northern Ireland with OSM data.

*(Interactive map screenshot: Route network layers for Northern Ireland, highlighting fastest/quietest cycling routes)*

- Layers for fastest/quietest routes, cycle networks
- Based on 2011 Census, under active development
- Source: [pctni.org](https://pctni.org), GitHub [pctni](https://github.com/pctni)

- Check out the code in the [`nptscot/nptscot`](https://github.com/nptscot/npt) and [`nptscot/nptscot.github.io`](https://github.com/nptscot/nptscot.github.io) repositories, plus the resulting app at [npt.scot](https://npt.scot).
- Look for the source code associated with other apps including [pctni.org](https://pctni.org), [pct.bike](https://pct.bike) and other apps of your choice.